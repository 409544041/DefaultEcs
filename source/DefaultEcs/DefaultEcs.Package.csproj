<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="DefaultEcs.targets" />
  
  <PropertyGroup Label="Sign">
    <SignAssembly>True</SignAssembly>
    <AssemblyOriginatorKeyFile>..\..\..\ds.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <PropertyGroup Label="Package">
    <Authors>Paillat Laszlo</Authors>
    <AssemblyName>DefaultEcs</AssemblyName>
    <AssemblyTitle>DefaultEcs</AssemblyTitle>
    <PackageId>DefaultEcs</PackageId>
    <Description>Entity Component System framework aiming for syntax and usage simplicity with maximum performance for game development.</Description>
    <PackageIconUrl>https://github.com/Doraku/DefaultEcs/raw/master/image/logo.png</PackageIconUrl>
    <PackageProjectUrl>https://github.com/Doraku/DefaultEcs</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <RepositoryUrl>https://github.com/Doraku/DefaultEcs.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>gamedev game-development game-engine ecs entity-component-system</PackageTags>

    <Version>0.11.0</Version>
    <PackageReleaseNotes>
updated System.Memory reference
enhanced debugging experience on World, Entity and EntitySet
added MaxCapacity, Capacity and Size properties on EntityCommandRecorder
added EntityAdded and EntityRemoved events on EntitySet
added EntityAdded and EntityRemoved events on AEntitySystem
added EntityDisposed event on World
added WhenAdded, WhenChanged and WhenRemoved filter on EntitySetBuilder to create reactive EntitySet
added WhenAddedAttribute, WhenChangedAttribute and WhenRemovedAttribute for automatique AEntitySystem EntitySet creation from a World
added Complete method on EntitySet to clear its content if created with a reactive filter
made T of ISystem contravariant

breaking changes
removed IEntitySetObserver and implementation, use EntityAdded and EntityRemoved events on EntitySet instead
    </PackageReleaseNotes>
  </PropertyGroup>
</Project>